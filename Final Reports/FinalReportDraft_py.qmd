---
title: "Final Report Draft (Python)"
title-block-banner: true
author: 
- Sean Leader
- William Medwid
- Vanessa Veto
- Jose Mierzejewski
format: 
  html:
    code-fold: true
    code-line-numbers: true
    code-tools: true
    self-contained: true
    theme: cosmo
  
editor: visual
execute:
  message: false
  include: false
  echo: false
---

```{python}
# Imports

import pandas as pd
import matplotlib.pyplot as plt
from IPython.display import Markdown
from tabulate import tabulate
import os
import calendar
```

```{python}
# Data
os.chdir('../')

aqi = pd.read_csv("Project Data/Combined/aqi_ozone_all_years_prediction.csv")
```

```{python}
aqi
```

```{python}
# Reading in other outputs
aqi_df_dt_preds = pd.read_csv("AQI Outputs/AQI_df_dt_preds_py.csv")
aqi_df_lm_preds = pd.read_csv("AQI Outputs/AQI_df_lm_preds_py.csv")
aqi_df_rf_preds = pd.read_csv("AQI Outputs/AQI_df_rf_preds_py.csv")
aqi_model_metrics = pd.read_csv("AQI Outputs/AQI_model_metrics_py.csv")
```

```{python}
# NWI Data
os.chdir('../')

nwi = pd.read_csv('cleaned_nwi.csv')

print([i for i in nwi.columns])
```

```{python}
# NWI Outputs
os.chdir('../')

df_nwi_lasso_features.to_csv = pd.read_csv("NWI Outputs/NWI_lasso_features_py.csv")

```

# Introduction

The EPA is an organization fundamentally invested securing and promoting the health and well-being of the environment. In this paper, we analyze two distinct but related environmental issues: air pollution and car dependency. For both issues, we used publicly available data sourced from the EPA to construct machine learning models to make predictions. For air pollution, we predicted a county's next-day Air Quality Index (AQI) from the previous day's atmospheric conditions to determine which factors contribute to AQI and how accurately we can determine tomorrow's AQI from today's conditions. For car dependency, we predicted the 'walkability' category of a localized area based on demographic information to deduce which demographic characteristics contribute most meaningfully to the 'walkability' of a location.

```{python}
# Previous Work - should we include this??? If so, we need to update citations in appendix

# Previous research has used similar methods to model AQI based on related conditions. One paper specifically models the AQI of Zhangdian District, China based on industrial waste gas emissions as well as general meteorological data. Their goals were to promote the optimization of polluting enterprises and to reduce the conflict between environmental protection and economic development. They compared results from a random forest, a back propagation neural network, a decision tree, and a least-squares SVM, ultimately preferring the Random Forest for its high accuracy, with an R-Squared value of 0.9. (Liu, Y. et al.) 

# One paper in the American Journal of Epidemiology used a linear regression approach to understand how income, education, racial/ethnic composition, age distribution, and sex were associated with indicators of neighborhood walkability. They found that neighborhoods with poorer residents tended to be more walkable, but with less open space. Similarly, children and the elderly tended to live in less walkable spaces, limiting their independence. (Katherine E. King et al.) Our work will be similar in that we are also trying to predict walkability and gain insight on what makes certain places more walkable than others. Our analysis will be different because we have many more variables to work with and we plan on taking a classification approach. 

# Another article with goals similar to goals of our project’s is this paper. These researchers also analyzed walkability, but viewed it only through the lens of the built environment, rather than including sociodemographic characteristics. Additionally, this paper specifically focused on a single metropolitan area whereas we will use data from all 50 U.S. states (and Washington D.C.). These researchers used PCA as their main analysis. (Denc, C. et al.) We plan on also using PCA, but only as a preprocessing step before fitting KNN models. Overall, this study uses very similar predictors and target variables to ours, and we hope to expand upon its findings."
```

# Data Collection & Description

## AQI

To collect information about atmospheric conditions and Air Quality Index, we downloaded two years (2021 & 2022) worth of atmospheric data from the EPA (source in the appendix). These data were collected by various monitoring stations across 43 counties in 32 states across the United States on a daily basis. In the final data set, one observation corresponded to one day of atmospheric measurements for a particular county, with multiple measurements from different weather stations. We had to omit some of the observations because predicting next-day AQI from current-day atmospheric conditions requires sequential days where all atmospheric measurements at that monitoring station are present. Sequential days that were missing any of the atmospheric measurements on either day were omitted from the data.

**There are different AQIs for different atmospheric pollutants. For this project, we chose to predict the AQI based on ozone from atmospheric conditions (excluding ozone concentration) because the ozone AQI was the most frequent of the different AQIs after all data merging was complete.**

**For each atmospheric measurement, we extracted the minimum, average, and maximum measurement at each weather station each day.** The following table details the atmospheric measurements we extracted.

```{python, fig.cap = "Table 1. Variable summary for AQI dataset", include = TRUE}
var_summary_table = pd.DataFrame(data =  {
  'Variable Name' : ["no2", "co", "so2", "no", "temp","wind", "pressure", "humid", "AQI"],
  'Variable Description' : [
    "Atmospheric Concentration of Nitrogen Dioxide (ppb)",
    "Atmospheric Concentration of Carbon Monoxide (ppm)",
    "Atmospheric Concentration of Sulfur Dioxide (ppb)",
    "Atmospheric Concentration of Nitrogen Monoxide (ppb)",
    "Temperature (Celsius)",
    "Wind Speed (knots)",
    "Barometric Pressure (millibars)",
    "Relative Humidity (% rh)",
    "Next-day Air Quality Index, measured by Ozone"]
})

Markdown(tabulate(var_summary_table, headers = ['Variable Name','Variable Description'], showindex = "never"))
```

## Walkability

Data about walkability was accessed from the U.S. Government's open data catalog, data.gov. The data was collected by the Environmental Protection Agency (EPA) and contains demographic information, built environment characteristics, and transportation infrastructure data from 2021 for each Census block group. These inputs are used to calculate the National Walkability Index as defined by the EPA. This index can be expressed either numerically or translated into qualitative categories (see Table 2 below)

```{python, fig.cap = "Talbe 2: NWI Walkability Categories", include = TRUE}
df_walkability_categories = pd.DataFrame(
  data = {
    'Walkability Index' : ['1 - 5.75', '5.76 - 10.5', '10.51 - 15.25', '15.26 - 20'],
    'Category' : ['Least Walkable', 'Below Average Walkable', 'Above Average Walkable', 'Most Walkable']
})

Markdown(tabulate(df_walkability_categories, headers = ['Walkability Index','Category'], showindex = "never"))
```

In total, there are 220,740 observations for 117 variables in this dataset. Since there were so many predictors to choose from, we narrowed it down to those in the table below (more details on variable selection in the Exploratory Data Analysis section).

```{python, fig.cap = "Talbe 3: Variable Summary for Walkability Dataset", include = TRUE}
df_walkability_categories = pd.DataFrame(
  data = {
    'Variable Name' : ['D2a_EpHHm', 'D2b_E5MixA', 'D3apo', 'D3b', 'D3bmm4', 'D3a'],
    'Description' : ['The mix of employment types and occupied housing', '5-tier employment mix (retail, office, industrial, service, and entertainment jobs)', 'Network density in terms of pedestrian-oriented paths per square mile', 'Street intersection density (weighted, auto-oriented intersections eliminated)', 'Intersection density in terms of multi-modal intersections', 'Total road network density']
})

Markdown(tabulate(df_walkability_categories, headers = ['Variable Name','Description'], showindex = "never"))
```

# Exploratory Data Analysis

## AQI

### Overall distribution of AQI

```{python}
# This is  the colormap I'd like to use.
cm = plt.cm.get_cmap('RdYlBu_r')

# Plot histogram.
n, bins, patches = plt.hist(aqi["AQI_next_day"], 25)
bin_centers = 0.5 * (bins[:-1] + bins[1:])

# scale values to interval [0,1]
col = bin_centers - min(bin_centers)
col /= max(col)

for c, p in zip(col, patches):
    plt.setp(p, 'facecolor', cm(c))
    
# Prints a bunch of [None] so not included - plot shows in next chunk
```

```{python, fig.cap = "Figure 1. Overall distribution of AQI", include = TRUE, message = FALSE}
plt.show()
plt.close()
```

```{python, fig.cap = "Table 2. Summary statistics of AQI", include = TRUE}
def iqr(x):
    return x.quantile(0.75) - x.quantile(0.25)

aqi.agg(
    {
        "AQI_next_day": ["mean", "std", "median", iqr],
    }
).transpose().rename({"mean" : "Mean‎ ‎ ‎ ‎ ‎ ‎ ", "std" : "SD‎ ‎ ‎ ‎ ‎ ‎ ", "median" : "Median‎ ‎ ‎ ‎ ‎ ‎ ", "iqr" : "IQR‎ ‎ ‎ ‎ ‎ ‎ "}, axis = 1).style.hide(axis = "index").set_table_styles([dict(selector='th', props=[('text-align', 'center')]), {'selector' : '','props' : [('border', '1px solid black')]}]).format(precision=0, formatter={('Mean', 'Median', 'IQR', 'SD'): "{:.2f}"})
```

Overall, the distribution of AQI scores is single-peaked and right-skewed, with a median next-day AQI of 44 and an interquartile range of 30. The graph is likely right-skewed because AQI is bounded on the lower end by 0, but has no upper limit.

<br /> <br />

### Overall distribution of AQI by month

```{python, fig.cap = "Figure 2. Distribution of AQI by month", include = TRUE}
months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", 
          "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]

aqi["Month"] = pd.Categorical(pd.to_datetime(aqi["Date"]).dt.month.apply(lambda x: calendar.month_abbr[x]), categories=months, ordered=True)
bp_dict = aqi[["AQI_next_day", "Month"]].boxplot(by ='Month', column =['AQI_next_day'], return_type='both', grid = False, patch_artist = True)

colors = ["#034E7B", "#0570B0", "#3690C0", "#74A9CF", "#A6BDDB", "#D0D1E6",
                                          "#F1EEF6", "#D0D1E6", "#A6BDDB", "#74A9CF", "#3690C0", "#0570B0"]
for row_key, (ax,row) in bp_dict.iteritems():
    ax.set_xlabel('')
    for i,box in enumerate(row['boxes']):
        box.set_facecolor(colors[i])
        
# Plot shows in next chunk to avoid prints
```

```{python}
plt.show()
plt.close()
```

Figure 2 reveals the seasonal trend in AQI. AQI tends to be higher in the summer months and lower in the winter months for these data. The exact mechanism for this relationship is unknown, but some hypotheses include:

(1) Extreme heat and stagnant air can lead to an increase in ground-level ozone concentrations
(2) Hot and dry weather results in forest fires that can increase atmospheric pollutants
(3) Clouds are less common at higher temperatures but are important for preventing the production of ozone

```{python}
# https://scied.ucar.edu/learning-zone/air-quality/how-weather-affects-air-quality#:~:text=Heat%20waves%20often%20lead%20to,ozone%20pollution%20and%20particulate%20pollution.
```

<br /> <br />

### Correlations between predictors and AQI

```{python, fig.cap = "Figure 3. Predictor correlations with AQI, by min, mean, and max concentration", include = TRUE}
def get_var_cat(x):
  return x.split('_')[1]

def get_var_type(x):
  return x.split('_')[0]

aqi_seg = aqi.drop(["Date", "County", "State", "AQI", "AQI_cat", "max_ozone", "mean_ozone", "min_ozone", "Month"], axis = 1).corr()["AQI_next_day"].reset_index().rename({"index" : "variable", "AQI_next_day" : "Correlation"}, axis = 1)
aqi_seg = aqi_seg.loc[aqi_seg["variable"] != "AQI_next_day", :]

var_cat_order = ["no2", "temp", "co", "so2", "no", "wind", 
          "pressure", "humid"]

aqi_seg["variable_category"] = pd.Categorical(aqi_seg["variable"].apply(lambda x : get_var_cat(x)), categories = var_cat_order, ordered = True)
aqi_seg["variable_type"] = aqi_seg["variable"].apply(lambda x : get_var_type(x))

aqi_seg.pivot(index = "variable_category", columns = "variable_type", values = "Correlation").plot.bar(color = {"max" : "#88CCEE", "mean" : "#CC6677", "min" : "#DDCC77"}, ylim = (-0.6, 0.6))

```

Figure 3 shows how the different atmospheric measurements correlate with next-day AQI. For most atmospheric measurements, the correlation is in the same direction for the minimum, mean, and maximum. However, wind speed is a notable exception to this trend, where we can see that although the mean and minimum wind speed are negatively correlated with next-day AQI, the maximum wind speed has a slight positive correlation with next-day AQI. The single variable with the most positive correlation is maximum no2, with a correlation of \~0.59. The single variable with the most negative correlation is minimum humidity, with a correlation of \~-0.50.

<br /> <br />

```{python}
aqi.drop(["Date", "County", "State", "AQI", "AQI_cat", "max_ozone", "mean_ozone", "min_ozone"], axis = 1).corr()["AQI_next_day"]
```

## Walkability

Overall distribution of Walkability Index

```{python}
# ![](images/NWI_histogram.png)

plt.clf()
sns.set_theme()
nwi['NatWalkInd'].hist()
plt.title('Walkability occurrences')
plt.xlabel('Walkability Index')
plt.ylabel('Occurrences')
plt.show()
plt.close()
```

The histogram of Walkability Index appears quite bell-shaped and symmetric. The median Walkability Index is 13.83 and the interquartile range is 3.33. The range for the Walkability Index is 1 to 20.

### Relationship between Population and Walkability Index Category

# WIP

# Work in progress

# WIP on this graph

```{python}
bp_dict = nwi[["CBSA_POP", "cat"]].boxplot(by ='cat', column =['CBSA_POP'], return_type='both', grid = False, patch_artist = True)

colors = ["#034E7B", "#0570B0", "#3690C0", "#74A9CF", "#A6BDDB", "#D0D1E6",
                                          "#F1EEF6", "#D0D1E6", "#A6BDDB", "#74A9CF", "#3690C0", "#0570B0"]
for row_key, (ax,row) in bp_dict.iteritems():
    ax.set_xlabel('')
    for i,box in enumerate(row['boxes']):
        box.set_facecolor(colors[i])
        
# Plot shows in next chunk to avoid prints
```

```{python}
plt.show()
plt.close()
```

![](images/walk%20pop%20boxplot-01.png)

Further exploration was done to examine if population may have a relationship with the Walkability Index Category. The Least Walkable category seemed to have the highest population, with the Below Average and Above Average Walkable categories having the lowest populations. These areas had a tighter interquartile range although there were some outliers having much higher populations. The places that were Most Walkable had a large variation in population.

### Relationship between Employment Mix and Walkability Index Category

Lastly, some preliminary investigation was conducted to look at the relationship between employment mix and walkability. Figure \# below shows a clear upward trend in walkability as the employment mix increases.The employment mix variable is a proportion between 0 and 1 that shows how diverse jobs are in a given area (categories of jobs are retail, office, industrial, service, and entertainment). Higher values indicate greater diversity of jobs and according to the EPA, this is correlated with more walk trips.

![](images/walk%20mix%20scatterplot-01.png)

\

Variable Selection

To help determine which of the 100+ predictors to use, we used both regression with a LASSO penalty and a Decision Tree. The most important variables were consistent between these two model specifications. Out of the 117 variables, only 6 actually made a significant contribution to reducing impurity in the decision tree, so these were the variables we used when fitting our models. All six of these variables also had nonzero coefficients even with the LASSO penalty. A bar plot of the LASSO-selected variables and the upper part of the decision tree are shown below.

![](images/lasso_coefficients.png)

```{python, fig.cap = 'Figure #: Bar plot of top six most important variables; selected as predictors for final models'}
plt.clf()
plt.figure().set_figwidth(20)
sns.barplot(x=df_nwi_lasso_features["features"][:6], y=np.abs(df_nwi_lasso_features["coefficients"][:6]))
plt.title('Top Lasso Coefficients')
plt.ylabel('Coefficient')
plt.savefig('NWI Outputs/lasso_coefficients.png')
plt.show()
plt.close()
```

![Figure 5: Decision tree showing the uppermost splits (most important variables)](NWI%20Outputs/decision_tree_feature_selection.png)

# Model Results

# AQI

We used three different types of models to predict AQI: linear models, decision trees, and random forests. Each model predicts the next day's AQI based on the min, mean, and max values of our 8 predictor measurements. Notably, this does not include any measurements of the day's Ozone or AQI. We measured each model's performance by cross-validating on data the model had not been trained on. The R-Squared and Root Mean Squared Error metrics are displayed below:

```{python}
Markdown(tabulate(aqi_model_metrics, headers = ['Model','R-Squared', 'Root Mean Squared Error'], showindex = "never"))
```

These metrics indicate that the Random Forest is our overall most effective model, with an R-Squared value of 0.676 and a RMSE of 20.953. This indicates that the random forest could successfully predict 67.6% of the variability in AQI, only being wrong by an average of about 20.953 AQI points. Our linear model was markedly worse, with a RMSE of 23.334, and our decision tree fared the worst, with a RMSE of 24.315 AQI points.

To investigate the biases of each of our models, we have plotted the residual errors below:

```{python, fig.cap = "Figure 4: AQI model residual plots. A moving average of the mean error is plotted to display model biases", include = TRUE}
sns.set_theme()
plt.figure().set_figwidth(20)
plt.figure().set_figheight(1)

fig, axs = plt.subplots(3, 1, sharex=True, sharey = True)
axs[0].scatter(df_lm_preds["preds"], df_lm_preds["residuals"], s=.3)
axs[0].axhline(y = 0, color = 'k', linestyle = '--', linewidth=.5)
axs[0].set_title('LM', fontdict={'fontsize' : 8})
axs[1].scatter(df_dt_preds["preds"], df_dt_preds["residuals"], s=.3)
axs[1].axhline(y = 0, color = 'k', linestyle = '--', linewidth=.5)
axs[1].set_title('DT', fontdict={'fontsize' : 8})
axs[2].scatter(df_rf_preds["preds"], df_rf_preds["residuals"], s=.3)
axs[2].axhline(y = 0, color = 'k', linestyle = '--', linewidth=.5)
axs[2].set_title('RF', fontdict={'fontsize' : 8})


plt.show()
plt.close()
```

![Figure 4: AQI model residual plots. A moving average of the mean error is plotted to display model biases](AQI_residuals.png)

With these results in mind, we will briefly discuss each model's strengths and weaknesses.

### Linear Model

Our final linear model ended up slightly biased with its lowest predictions being under the true AQI, and its higher predictions tending to over-predict by about 10 points. After comparing several linear model specifications, we settled on this model which uses our predictors in both their original and squared forms to predict AQI. This allowed us to reduce the biases on the high and low somewhat, but some bias remained.

Despite its biases and inaccuracies, the linear model is useful for its interpretability. We found three of our predictors to be far more important than the others by using LASSO regression, giving us a simple understanding of the basic associations at play. See the formula below:

$$
AQI = 58.61 + 12.2 * max\_no2 + 8.16 * max\_temperature - 6.45 * min\_humidity
$$

Note that in this formula, max_no2, max_temperature, and max_humidity are standardized, measured in standard deviations rather than typical units. This gives us a simple understanding that high no2 and temperature in a day indicate high AQI, while humidity indicates lower AQI. The association between no2 and ozone makes a lot of sense, as both are typically generated from fossil cars and industrial facilities, so we would expect them to be highly correlated. Despite being so simplified, this model still has a RMSE of only 26.169, and a R-squared of 0.484.

### Decision Tree

Our decision tree's predictions look far different than the others because they are made in discrete categories rather than in a more continuous manner. While this model has little bias, with only a slight overestimation bias on its highest predictions of 144, it has the largest overall errors, making it a worse predictor than other models. Nevertheless, this model may be very valuable, as we can directly see how it makes its decisions in the following decision tree flowchart:

![Figure 5: Decision Tree Flowchart](../AQI Outputs/AQI_decision_tree_py.png)

At each step, this decision tree chooses one variable to best separate high-AQI days from low-AQI days. The first, largest, split separates based on no2: days with a very low no2, below 18 ppb, are directed to the left side of the tree, which tends to have lower AQI. This split makes sense because ozone and no2 tend to come from the same sources such as cars and industrial facilities, so a low no2 concentration correlate with low ozone. For low no2 days, the tree finds that high temperature is the best indicator of high AQI, with humidity distinguishing further days with a max temperature between 68 and 82 degrees Fahrenheit. For high no2 days, the tree uses air pressure and temperature to distinguish AQI further.

### Random Forest

Our final optimized random forest model averages the results of 500 decision trees, each of which is trained on a random subset of 6 of our predictors, a random subset of our data, and splits into many more AQI categories than the decision tree above. This leads each of the individual decision trees to over-fit to different small trends in our training data. By taking the average of so many over-fit trees, each of which recognizes different indicators of AQI, the random forest is very effective at predicting AQI, but does not lend itself to a more detailed human understanding.

## Walkability

For the Walkability dataset, we used both regression (predicting the numeric Walkability Index) and classification (predicting the Walkability Index category) methods. For both approaches, 10-fold cross-validation was used to get a better sense of how these models would perform when predicting on unseen data.

```{python}

```

![](../WalkabilityImages/walk%20mod%20performance-01.png)

### Linear Regression

Due to the vaguely linear trend from the Figure \# in the Exploratory Data Analysis section, a simple linear regression model was fit. The R-squared value was 0.75, meaning that 75% of the variability in Walkability Index was explained by the eight variables shown in the bar plot below. The Shape Length (length of the area, a proxy for area) and D3bmm4 (another measure of intersection density in terms of multi-modal intersections) variables were added. The MSE for this model was 1.36, meaning that on average, prediction errors were 1.36 Walkability Index points. See Appendix for plot of residuals (confirmed they were randomly scattered and showed approximately equal variability).

Each variable is numeric, meaning that the coefficients can be interpreted as a one unit increase in that variable leads to an increase (on average) in Walkability Index equivalent to its coefficient value (after adjusting for all other variables in the model). For example, the coefficient for D3B is 0.98. This means that on average, the Walkability Index increases by 0.98 points for every additional unit of weighted street intersection density after accounting for the other variables in the model. It makes sense that increasing D3B has a positive impact on walkability as it measures street intersection density and is weighted to emphasize pedestrian and bicycle connectivity. More dense intersections indicate a more connected place with shorter block lengths thereby making the place more walkable.

![](../WalkabilityImages/LR_coefficients.png)

### Decision Tree Regression

A decision tree regressor, much like linear regression gives us the benefit of being highly interpretable. We can create the model and interpret the top of the resulting tree similarly to how we did when performing feature selection. Tuning became necessary as initial tree models were drastically overfitting. The most effective hyperparameter to stop this turned out to be limiting the maximum tree depth, which we settled on 9, which seemed to be a sweet spot between overfitting and underfitting the data.

![](../WalkabilityImages/decision_tree.png)

Figure #: Decision tree fit on most important 6 features

At the top of the tree, as expected, is the variable pertaining to intersection density, with a mean of 107 and a median of 123. Because the splitting at the first node uses the threshold of 103, it tells us that we can expect a pretty significant drop in walkability depending on whether the intersection density is above or below average.

### Random Forest Regression

With such a large dataset, a random forest algorithm was far from the fastest option. Regardless, it has the potential to improve upon predicting power of the other models, especially in regards to overfitting. The tuning of hyperparameters was limited simply because each fitting took a substantial amount of time. Regardless, various options for the number of total estimators in the forest were attempted, with 100 being a good balance of powerful and feasible to run in a reasonable amount of time.

The final random forest model achieved a high R2 score of .8929 and an MSE of .5794.

### K-Neighbors Regression

Though usually performed in classification problems, KNN was a powerful regression tool in our analysis. Fit with the top 6 predictors according to our feature selection (See Table 2), the final model achieved mean squared error .5960 and R2 of .8895.

![](../NWI Outputs/KNN_n_scores.png)

Figure #: Tuning number of neighbors for KNN regression

# Discussion

# AQI

Our model results demonstrate that we can forecast ozone-based AQI effectively without knowledge of ozone levels. On average, our random forest was only wrong by 20.953 AQI points, rarely predicting far from the actual AQI. As the estimates are in the same ballpark as the real AQI, they could potentially serve to give the public a general idea of how unsafe atmospheric ozone levels are in the absence of ozone measurements. We tuned several models for various parameters in order to arrive at this accurate of a random forest predictor. While our other models didn't prove to be as impactful, the linear model gives us an intuitive understanding that ozone is associated with high no2, high temperatures, and low humidity.

## Walkability

Overall, our models had good performance when predicting a location's Walkability Index. The best model in terms of predictive performance (using R-Squared as the metric of choice) was the Random Forest Regression. It was able to explain 89.34% of the variability in Walkability Index. It had similar performance to the Decision Tree and KNN models. The Random Forest model should be used if the EPA's goal is to get the best predictions, however it has the downside of not being very interpretable. If the primary goal is interpretation, then either the Decision Tree or Linear Regression models should be used (KNN is nonparametric).

Interpreting the Decision Tree, the most important variables in terms of reducing node impurity are D3B, D2b_E8MixA, and D2c_TrpMx1. As discussed previously, D3B measures street intersection density and is weighted to favor pedestrian and bicycle connectivity. Therefore, it follows that places should prioritize improving pedestrian and bicycle infrastructure such as dedicated paths or protected lanes to help enhance walkability. D2b_E8MixA measures job diversity (it is similar to the 5-tier variable, however this one also includes education, health care, and public administration jobs). Increasing job diversity will not magically make a place more walkable, however it may indicate greater socioeconomic diversity and as such, varying reliance on personal cars compared to public transit or walking. Lastly, D2c_TrpMx1 indicates how mixed employment categories and households are based on vehicle trips.

# Ethics

## Good uses of our work

It is important that as we give you these powerful machine learning model fits, you are aware of the importance of their proper usage. We hope that you will use the work detailed in this report to better understand the atmospheric factors that contribute to the future air quality of an area and its characteristics that determine its walkability. For the AQI model in particular, we also expect that you can use this model to effectively predict the air quality based on ozone even when direct ozone measurements are unable to be taken, using other atmospheric conditions as a proxy measurement.

For the walkability model, we would support the usage of our models to predict areas with poor walkability for areas where it is unknown, such that changes could be implemented to make it more pedestrian-friendly. The goal of these models is to highlight a small number of factors that have a large impact on how walkable a place is. By identifying these characteristics, it is our hope that civil projects can be undertaken and that public policy changes can be implemented to improve walkability for all communities, but especially those that need it most. For example, there could be changes to the local codes that require a certain intersection density or federal incentives to having high public transportation service levels. Walkability is very strongly linked to physical health and quality of life metrics, so it is of the utmost importance to ensure all communities are walkable.

## Misuses

Although there are many appropriate uses of our work, we also want to forewarn you about the potential misuses to avoid. Primarily, though our models predict ozone-based AQI, it should not be used as a proxy for AQI when proper measurements are available, as it could miss some important and dangerous fluctuations. The model's intended use is as an emergency measure, when ozone measurements are not available.

As the EPA, it is your responsibility to use the knowledge gained from this work and the corresponding machine learning models to help the environment, not to harm it. If large polluters use these models to find ways to disguise their harmful ozone production, this could ultimately do more harm than good. For example, if they learn that cold, humid days see low ozone, they may choose emit more fumes during those times and harm the larger environment.

Care should be taken to protect public transportation services even if the area would be "walkable enough" without having such high service levels. It would also not be appropriate to target low-income housing developments to places that are less walkable simply because these areas tend to have a higher percentage of low-wage workers.

## Bias

We must acknowledge that our project is subject to biases - deliberate or otherwise. The primary bias in this analysis came from the data collection process. Our final data set consisted of atmospheric measurements from only 43 counties across 32 states, meaning that a substantial portion of the country is left unaccounted for by this analysis. Also, we did not investigate the geographic locations of the weather stations that were monitoring the atmospheric conditions; hence it is possible that these measurements are not representative of the general population of atmospheric conditions. Finally, the data we analyzed came only from the years 2021 and 2022 - meaning that insights and trends illuminated in this report may not reflect the historical patterns.

For the walkability dataset, we have very serious concerns about bias. Many variables in the dataset required information about public transit services. Local transit agencies should use a General Transit Feed Specification (GTFS) to share transit information in a standardized format. Although 95% of total transit ridership in the US is covered by the GTFS, not all places develop GTFS data for their systems or share it, particularly smaller transit agencies. Since many variables depended on this information, observations without it were removed. Unfortunately, this had a severely disproportionate impact on the less walkable places. Prior to removal, 43,250 places were designated as "Least walkable" and 68,640 places were "Below average walkable." After removal, there were only 10 least walkable places and 7,583 below average walkable places remained. Most walkable and above average walkable places only lost 4% and 15% of their locations respectively. Since the classes are so unbalanced, our models will likely (and unrealistically) predict areas will be more walkable than they are.

# Conclusion

The decision tree model seems to be the most useful in regards to the walkability dataset. The random forest regressor was expected to outcompete the other models in terms of predicting power, but the improvement was so marginal that it is far from being worth the lack of interpretability that comes with the decision tree model.

-   Make better overarching claims as to which models we would choose for purposes, which factors contribute to walkability

    -   D3B negative correlation according to decision tree

    -   The mix of employment type and occupied housing, according to linear regression

    -   Shape length has negative correlation, according to linear regression

# Appendix

## Sources

How Weather Affects Air Quality \| Center for Science Education. (n.d.). UCAR. <https://scied.ucar.edu/learning-zone/air-quality/how-weather-affects-air-quality>

-   This is where sources we used should be linked. Please cite them in some proper format, not just hyperlinks (example above).
-   Any additional output from model summaries that did not fit earlier in the paper could go here as well

Smart Location Database Technical Documentation and User Guide (Version 3.0)

<https://www.epa.gov/sites/default/files/2021-06/documents/epa_sld_3.0_technicaldocumentationuserguide_may2021.pdf>

National Walkability Index Methodology and User Guide

## Additional Output

Residual Plots:

![](images/multi_residuals.png)

![](images/RF_residuals.png)

![](images/DT_residuals.png)
