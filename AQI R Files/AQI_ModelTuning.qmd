---
title: "AQI Prediction"
author: "Sean Leader // William Medwid // Vanessa Veto // Jose Mierzejewski"
format: 
  html:
    code-fold: true
    code-line-numbers: true
    code-tools: true
    self-contained: true
editor: visual
execute:
  message: false
---

```{r packages, message = FALSE}
# Load Packages

library(tidyverse)
library(tidymodels)
library(glmnet)
library(here)
library(rpart)
library(rpart.plot)
```

```{r}
aqi_ozone <- read_csv(here("Project Data", "Combined", "aqi_ozone_all_years_prediction.csv"))

aqi_ozone <- aqi_ozone %>% 
  select(-Date, -State, -County, -AQI_cat)
```

```{r}
set.seed(13)

aqi_ozone_cvs <- aqi_ozone %>% 
  vfold_cv(k = 5)
```

```{r}
# Training and validation sets for individual models
set.seed(13)

sample <- sample(c(TRUE, FALSE), nrow(aqi_ozone), replace=TRUE, prob=c(0.9,0.1))
aqi_train  <- aqi_ozone[sample, ]
aqi_test   <- aqi_ozone[!sample, ]
```



## Linear models

```{r}
lin_reg_tune <- linear_reg(penalty = tune(), mixture = tune()) %>%
  set_engine("glmnet") %>%
  set_mode("regression")

no_ozone_recipe <- recipe(AQI_next_day ~ ., data = aqi_ozone) %>% 
  step_rm(c("AQI", "max_ozone", "mean_ozone", "min_ozone")) %>% 
  step_normalize()

full_recipe <- recipe(AQI_next_day ~ ., data = aqi_ozone) %>% 
  step_normalize() # %>%  step_interact(terms = ~max_wind:mean_ozone + max_wind : max_ozone)

lam_grid = grid_regular(penalty(), mixture(c(0,1)), levels = 3)

lm_wf <- workflow() %>% 
  add_model(lin_reg_tune) %>% 
  add_recipe(no_ozone_recipe)

grid_results <- lm_wf %>% 
  tune_grid(resamples = aqi_ozone_cvs, grid = lam_grid)

grid_results %>% 
  collect_metrics() %>% 
  filter(.metric == "rsq") %>% 
  arrange(desc(mean))
```

Out of many penalty and mixture parameters, we found a mixture of 1/3 to work best.

```{r}
lm_best_spec <- linear_reg(penalty = 0, mixture = 1) %>%
  set_engine("glmnet") %>%
  set_mode("regression")

#Using same recipe as aboev

lm_best_wf <- workflow() %>% 
  add_model(lm_best_spec) %>% 
  add_recipe(no_ozone_recipe)

lm_best_fit <- lm_best_wf %>% 
  fit(aqi_train)

lm_preds <- lm_best_fit %>% 
  predict(aqi_test) %>% 
  mutate(truth = aqi_test$AQI_next_day,
         err = .pred - truth)

lm_best_fit %>% 
  extract_fit_parsnip() %>% 
  tidy() %>% 
  arrange(desc(abs(estimate)))
```

```{r}
lm_preds %>% 
  ggplot(aes(x = .pred, y = err)) +
  geom_point() +
  geom_smooth()
```

When our linear model predicts low o-zone values, it is ocnsistently biased towards under-prediction.

```{r}
lm_preds %>% 
  ggplot(aes(x = .pred, y = truth)) +
  geom_point() +
  geom_smooth() +
  geom_smooth(method = "lm", color = "red", formula = "truth ~ .pred")
```

# Random Forest 

```{r}
rf_mod <- rand_forest(mtry = tune(), min_n = tune(), trees = 500) %>%
  set_engine("ranger") %>%
  set_mode("regression")


#basic_recipe <- recipe(AQI_next_day ~ ., data = aqi_ozone) %>% 
#  step_normalize() %>% 
#  step_rm(c("Date", "State", "County", "AQI_cat"))


rf_wf <- workflow() %>% 
  add_model(rf_mod) %>% 
  add_recipe(no_ozone_recipe)


rf_grid <- grid_regular(min_n(c(100, 200)),
                        mtry(c(4, 6)),
                        levels = 2)

grid_resulst <- rf_wf %>% 
  tune_grid(resamples = aqi_ozone_cvs,
            grid = rf_grid)

grid_resulst %>% 
  collect_metrics() %>% 
  filter(.metric == "rsq") %>% 
  arrange(desc(mean))
```

```{r}
rf_best_spec <- rand_forest(mtry = 6, min_n = 100) %>%
  set_engine("ranger") %>%
  set_mode("regression")

#Using same recipe as aboev

rf_best_wf <- workflow() %>% 
  add_model(rf_best_spec) %>% 
  add_recipe(no_ozone_recipe)

rf_best_fit <- rf_best_wf %>% 
  fit(aqi_train)

rf_preds <- rf_best_fit %>% 
  predict(aqi_test) %>% 
  mutate(truth = aqi_test$AQI_next_day,
         err = .pred - truth)

rf_pred_plot <- rf_preds %>% 
  ggplot(aes(x = .pred, y = err)) +
  geom_point() +
  geom_smooth() +
  xlab("Random Forest Prediction") +
  ylab("Error")
```


```{r}

```

Compared to our linear model, a random forest is much less biased. For its predictions between 0 and 100,the random forest isn't perfect, but isn't biased high or low. Above 100 predicted AQI, the random forest develops a tendency to under-predict, however.

# Decision Tree

```{r}
tree_mod <- decision_tree() %>%
  set_engine("rpart") %>%
  set_mode("regression")

tree_wflow <- workflow() %>%
  add_recipe(no_ozone_recipe) %>%
  add_model(tree_mod)
```

```{r}
tree_fit <- tree_wflow %>%
  fit_resamples(aqi_ozone_cvs)

tree_fit %>% 
  collect_metrics() %>% 
  filter(.metric == "rsq")
```

### Tree plotted

```{r}
tree_fit_1 <- tree_wflow %>%
  fit(aqi_train)

tree_fit_1$fit
```

```{r}
tree_fitted <- tree_fit_1 %>% 
  pull_workflow_fit()

rpart.plot(tree_fitted$fit)
```

```{r}
tree_preds <- tree_fit_1 %>% 
  predict(aqi_test) %>% 
  mutate(truth = aqi_test$AQI_next_day,
         err = .pred - truth)

tree_pred_plot <- tree_preds %>% 
  ggplot(aes(x = .pred, y = err)) +
  geom_point() +
  geom_smooth() +
  xlab("Decision Tree Prediction") +
  ylab("Error")
```

# Combined Results Plot

```{r}
all_preds <- lm_preds %>% mutate(model = "Linear\nModel") %>% 
  rbind(tree_preds %>% mutate(model = "Decision\nTree")) %>%
  rbind(rf_preds %>% mutate(model = "Random\nForest")) %>% 
  mutate(model = factor(model, levels = c("Linear\nModel", "Decision\nTree", "Random\nForest")))

all_preds %>% 
  ggplot(aes(x = .pred, y = err)) +
  geom_point() +
  geom_hline(yintercept = 0) + 
  geom_smooth(se = FALSE, color = "red") +
  facet_grid(rows = vars(model)) +
  xlab("Prediction") +
  ylab("Error") +
  theme_bw() +
  theme(strip.text.y.right = element_text(angle = 0))
```


# PCA (interpretation)

```{r}
pc <- prcomp(aqi_ozone %>% select(-AQI_next_day), center = TRUE, scale = TRUE) 

rotation <- pc$rotation %>% 
  data.frame()
```

```{r}
rotation %>% 
  select(PC1) %>% 
  arrange(desc(abs(PC1)))
```

The first loading seems to describe generally poor air quality. High NO2, Ozone, CO, and high temperature contribute to this loading, as well as a consistently low humidity.

```{r}
rotation %>% 
  select(PC2) %>% 
  arrange(desc(abs(PC2)))
```

The second loading is more complex, describing dry, windy days with high ozone, low carbon monoxide., and low NO2. Usually, carbon monoxide and Ozone are correlated, as they are often produced in tandem, but this loading indicates that there may be a prominent effect creating days where ozone is high while carbon monoxide.

```{r}
total_var <- sum(pc$sdev^2)

(pc$sdev^2/total_var) %>% cumsum()

```

